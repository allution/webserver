define(["lib/react","strategies/strategies","lib/lodash","lib/clib","game-logic/engine","stores/StrategyEditorStore","actions/StrategyEditorActions"],function(e,t,n,r,i,s,o){function a(){var e=s.getState();return e.engine=i,e}var u=e.DOM;return e.createClass({displayName:"strategyEditor",getInitialState:function(){return a()},componentDidMount:function(){s.addChangeListener(this._onChange)},componentWillUnmount:function(){s.removeChangeListener(this._onChange)},_onChange:function(){this.isMounted()&&this.setState(a())},_runStrategy:function(){o.runStrategy()},_stopStrategy:function(){o.stopScript()},_updateScript:function(){var e=this.refs.input.getDOMNode().value;o.updateScript(e)},_selectStrategy:function(){var e=this.refs.strategies.getDOMNode().value;o.selectStrategy(e)},render:function(){var i=this,a=n.map(t,function(e,t){return u.option({value:t,key:"strategy_"+t},r.capitaliseFirstLetter(t))}),f;if(typeof this.state.strategy=="function"){var l=e.createFactory(this.state.strategy);f=l({StrategyEditorStore:s,StrategyEditorActions:o})}else f=u.textarea({className:"strategy-input",ref:"input",value:i.state.strategy,onChange:i._updateScript,disabled:this.state.active});return u.div({className:"strategy-container"},f,u.button({className:"strategy-start",onClick:i._runStrategy,disabled:this.state.active||this.state.invalidData||!this.state.engine.username},"RUN!"),u.button({className:"strategy-stop",onClick:i._stopStrategy,disabled:!this.state.active},"STOP"),u.select({className:"strategy-select",value:this.state.selectedStrategy,onChange:i._selectStrategy,ref:"strategies",disabled:this.state.active},a),u.span({className:"strategy-invalid-data"},this.state.invalidData||!this.state.engine.username))}})});